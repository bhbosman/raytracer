Ray Trace Application
---------------------

Name: Brendan Bosman
Student Number: 909509763
Course: Computer Graphics at School of Computer Science
Institution: University of Johannesbur, South Africa



Material used from other authers
1. Perlin Noise Algorithm
2. PLY Reader from  Diego Nehab, IMPA http://www.impa.br/~diego/software/rply
3. http://www.wikipedia.com for definitions
4. http://www.scratchapixel.com for ray sphere intersection algorithm
5. Alex Hardy text book
6. QT Resources to implement multi threading


Marking sheet
-------------
1.1 Objects: infinite plane, intercept, normal: DONE
1.2 Objects: Sphere, intercept, normal: DONE
1.3 Point lights: DONE
1.4 Phong lighting model Recursive raycast process: DONE
1.6 Display/saving of rendered image: DOONE
1.7 Use of camera (and associated transforms): DONE
1.8 Transforms on objects (rotate, translate): DONE
1.9 Objects: Triangles/meshes: DONE
1.10 Objects: Bezier surfaces / splines: Did not attempt
1.11 Objects: Subdivision surfaces: Did not attempt
1.12 Scene description language: Did not attempt
1.13 Refraction: Did not attempt
1.14 Shadows: DONE
1.15 Texturing: DONE
1.16 Bump mapping: DONE
1.17 Environment mapping: Did not attempt
1.18 Procedural texturing: DONE
1.19 Reyes architecture: Did not attempt
1.20 Shading language: Did not attempt
1.21 Radiosity: Did not attempt
1.22 Photon mapping: Did not attempt
1.23 Supersampling: DONE
1.24 Monte-Carlo/cone tracing: Did not attempt
1.25 Acceleration techniques Other: DONE

Others:
1. Blinn algorithm
2. Stanford bunny


